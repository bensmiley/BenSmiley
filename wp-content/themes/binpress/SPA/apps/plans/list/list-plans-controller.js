// Generated by CoffeeScript 1.7.1
var __bind = function (fn, me) {
        return function () {
            return fn.apply(me, arguments);
        };
    },
    __hasProp = {}.hasOwnProperty,
    __extends = function (child, parent) {
        for (var key in parent) {
            if (__hasProp.call(parent, key)) child[key] = parent[key];
        }
        function ctor() {
            this.constructor = child;
        }

        ctor.prototype = parent.prototype;
        child.prototype = new ctor();
        child.__super__ = parent.prototype;
        return child;
    };

define(['app', 'msgbus', 'regioncontroller', 'apps/plans/list/list-plan-view'], function (App, msgbus, RegionController, PlanListView) {
    return App.module("PlansApp.List", function (List, App, BackBone, Marionette, $, _) {
        var PlansListController;
        PlansListController = (function (_super) {
            __extends(PlansListController, _super);

            function PlansListController() {
                this.showPlanListView = __bind(this.showPlanListView, this);
                this.showPlansList = __bind(this.showPlansList, this);
                this.showCurrentPlanView = __bind(this.showCurrentPlanView, this);
                this.showCurrentPlan = __bind(this.showCurrentPlan, this);
                return PlansListController.__super__.constructor.apply(this, arguments);
            }

            PlansListController.prototype.initialize = function (opts) {
                this.planId = opts.planID;
                this.domainId = opts.domainID;
                this.layout = this.getLayout();
                this.listenTo(this.layout, "show", this.showCurrentPlan);
                this.listenTo(this.layout, "show", this.showPlansList);
                return this.show(this.layout);
            };

            PlansListController.prototype.getLayout = function () {
                return new PlanListView.PlansListLayout;
            };

            PlansListController.prototype.showCurrentPlan = function () {
                this.planModel = msgbus.reqres.request("get:plan:by:id");
                return this.planModel.fetch({
                    data: {
                        'domain_id': this.domainId,
                        'plan_id': this.planId,
                        'action': 'read-plan'
                    },
                    success: this.showCurrentPlanView
                });
            };

            PlansListController.prototype.showCurrentPlanView = function () {
                var currentPlanView;
                currentPlanView = this.getCurrentPlanView(this.planModel);
                return this.layout.currentPlanRegion.show(currentPlanView);
            };

            PlansListController.prototype.getCurrentPlanView = function (planModel) {
                return new PlanListView.CurrentPlanView({
                    model: planModel
                });
            };

            PlansListController.prototype.showPlansList = function () {
                this.planCollection = msgbus.reqres.request("get:all:plans");
                return this.planCollection.fetch({
                    success: this.showPlanListView
                });
            };

            PlansListController.prototype.showPlanListView = function (planCollection) {
                this.planListShowView = this.getPlanListView(planCollection);
                return this.layout.plansListRegion.show(this.planListShowView);
            };

            PlansListController.prototype.getPlanListView = function (planCollection) {
                return new PlanListView.PlanListsView({
                    collection: planCollection
                });
            };

            return PlansListController;

        })(RegionController);
        return App.commands.setHandler("show:plans:list", function (options) {
            return new PlansListController(options);
        });
    });
});
