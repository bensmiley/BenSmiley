// Generated by CoffeeScript 1.7.1
var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(['app', 'regioncontroller', 'apps/plans/change-plan/change-plan-view', 'msgbus'], function(App, RegionController, ChangePlanView, msgbus) {
  return App.module("PlansApp.Change", function(Change, App, BackBone, Marionette, $, _) {
    var ChangePlanController;
    ChangePlanController = (function(_super) {
      __extends(ChangePlanController, _super);

      function ChangePlanController() {
        this.showActiveSubscription = __bind(this.showActiveSubscription, this);
        return ChangePlanController.__super__.constructor.apply(this, arguments);
      }

      ChangePlanController.prototype.initialize = function(opts) {
        this.domainId = opts.domainID;
        this.layout = this.getLayout();
        this.show(this.layout, {
          loading: true
        });
        this.subscriptionModel = msgbus.reqres.request("get:subscription:for:domain", this.domainId);
        return this.subscriptionModel.fetch({
          success: this.showActiveSubscription
        });
      };

      ChangePlanController.prototype.getActiveSubscriptionView = function(subscriptionModel) {
        return new ChangePlanView.ActiveSubscriptionView({
          model: subscriptionModel
        });
      };

      ChangePlanController.prototype.showActiveSubscription = function(subscriptionModel) {
        var activeSubscriptionView;
        activeSubscriptionView = this.getActiveSubscriptionView(subscriptionModel);
        return this.layout.activeSubscriptionRegion.show(activeSubscriptionView);
      };

      ChangePlanController.prototype.getLayout = function() {
        return new ChangePlanView.ChangePlanLayout;
      };

      return ChangePlanController;

    })(RegionController);
    return App.commands.setHandler("change:plan", function(opts) {
      return new ChangePlanController(opts);
    });
  });
});
