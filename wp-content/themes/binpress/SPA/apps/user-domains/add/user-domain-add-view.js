// Generated by CoffeeScript 1.7.1
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(['app', 'text!apps/user-domains/templates/addUserDomain.html'], function(App, addUserDomainTpl) {
  var UserDomainAddView;
  UserDomainAddView = (function(_super) {
    __extends(UserDomainAddView, _super);

    function UserDomainAddView() {
      return UserDomainAddView.__super__.constructor.apply(this, arguments);
    }

    UserDomainAddView.prototype.className = 'add-user-domain-container';

    UserDomainAddView.prototype.template = addUserDomainTpl;

    UserDomainAddView.prototype.events = {
      'click #btn-add-user-domain': function() {
        var domaindata;
        if (this.$el.find('#add-user-domain-form').valid()) {
          domaindata = Backbone.Syphon.serialize(this);
          return this.trigger("add:user:domain:clicked", domaindata);
        }
      }
    };

    UserDomainAddView.prototype.onShow = function() {
      return this.$el.find('#add-user-domain-form').validate(this.validationOptions());
    };

    UserDomainAddView.prototype.onUserDomainAdded = function() {
      var successhtml;
      this.$el.find('#btn-reset-add-domain').click();
      this.$el.find('#msg').empty();
      successhtml = '<div class="alert alert-success"> <button class="close" data-dismiss="alert">&times;</button> Domain Sucessfully Added </div>';
      return this.$el.find('#msg').append(successhtml);
    };

    UserDomainAddView.prototype.validationOptions = function() {
      return {
        rules: {
          domain_name: {
            required: true
          },
          domain_url: {
            required: true,
            url: true
          }
        },
        messages: {
          domain_url: 'Enter valid url'
        }
      };
    };

    return UserDomainAddView;

  })(Marionette.Layout);
  return UserDomainAddView;
});
