// Generated by CoffeeScript 1.7.1
var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(['app', 'regioncontroller', 'apps/user-domains/edit/domain-edit-view', 'msgbus', 'apps/user-domains/groups/add/add-group-controller'], function(App, RegionController, DomainEditView, msgbus) {
  return App.module("UserDomainApp.Edit", function(Edit, App, BackBone, Marionette, $, _) {
    var DomainEditController;
    DomainEditController = (function(_super) {
      __extends(DomainEditController, _super);

      function DomainEditController() {
        this.showEditView = __bind(this.showEditView, this);
        return DomainEditController.__super__.constructor.apply(this, arguments);
      }

      DomainEditController.prototype.initialize = function(opts) {
        var domainModel;
        domainModel = msgbus.reqres.request("get:domain:model:by:id", opts.domainId);
        return domainModel.fetch().done(this.showEditView);
      };

      DomainEditController.prototype.showEditView = function(domainModel) {
        console.log(domainModel);
        this.layout = this.geEditDomainLayout(domainModel);
        return this.show(this.layout);
      };

      DomainEditController.prototype.geEditDomainLayout = function(domainModel) {
        return new DomainEditView({
          model: domainModel
        });
      };

      return DomainEditController;

    })(RegionController);
    return App.commands.setHandler("edit:user:domain", function(opts) {
      return new DomainEditController(opts);
    });
  });
});
